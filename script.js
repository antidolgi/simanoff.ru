document.addEventListener('DOMContentLoaded', function() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  initCursorTrail();
  initServiceCards();
  initOrderForm();
  initSecretMode();
  initContactRobot();
  initSecretHint();
  initBonusRules();
  initScrollAnimations();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –æ—Ç–∫—Ä—ã—Ç–∞ –ª–∏ —Å–µ–∫—Ü–∏—è –ø—Ä–∞–≤–∏–ª
  if (window.location.hash === '#bonus-rules') {
    document.querySelector('.bonus-rules-section').classList.add('active');
  }
});

// 1. –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ª–µ–¥ –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º
function initCursorTrail() {
  const cursor = {
    x: 0,
    y: 0,
    tx: 0,
    ty: 0,
    speed: 0.2
  };

  let trail = [];
  const maxTrail = 15;

  document.addEventListener('mousemove', e => {
    cursor.tx = e.clientX;
    cursor.ty = e.clientY;
  });

  function drawTrail() {
    cursor.x += (cursor.tx - cursor.x) * cursor.speed;
    cursor.y += (cursor.ty - cursor.y) * cursor.speed;
    
    trail.unshift({x: cursor.x, y: cursor.y});
    if(trail.length > maxTrail) trail.pop();
    
    const canvas = document.getElementById('cursor-canvas');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    
    for(let i = 0; i < trail.length; i++) {
      const pos = trail[i];
      const size = i * 0.7;
      const opacity = (1 - i/maxTrail) * 0.7;
      
      ctx.beginPath();
      const gradient = ctx.createRadialGradient(
        pos.x, pos.y, 0, 
        pos.x, pos.y, size * 10
      );
      gradient.addColorStop(0, 'rgba(74, 108, 247, ' + opacity + ')');
      gradient.addColorStop(1, 'rgba(140, 82, 255, 0)');
      
      ctx.fillStyle = gradient;
      ctx.arc(pos.x, pos.y, size * 10, 0, Math.PI * 2);
      ctx.fill();
    }
    
    requestAnimationFrame(drawTrail);
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  const canvas = document.createElement('canvas');
  canvas.id = 'cursor-canvas';
  canvas.style.position = 'fixed';
  canvas.style.top = '0';
  canvas.style.left = '0';
  canvas.style.zIndex = '9998';
  canvas.style.pointerEvents = 'none';
  document.body.appendChild(canvas);

  // –û—Ç–∫–ª—é—á–∞–µ–º –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
  if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
    canvas.remove();
  } else {
    drawTrail();
  }
}

// 2. –ö–∞—Ä—Ç–æ—á–∫–∏ —É—Å–ª—É–≥
function initServiceCards() {
  const serviceCards = document.querySelectorAll('.service-card');
  
  serviceCards.forEach(card => {
    card.addEventListener('click', () => {
      const service = card.dataset.service;
      document.getElementById('service-select').value = service;
      updateOrderTotal();
    });
  });
}

// 3. –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞
function initOrderForm() {
  const serviceSelect = document.getElementById('service-select');
  
  serviceSelect.addEventListener('change', updateOrderTotal);
  document.getElementById('service-form').addEventListener('submit', validateBonus);
  
  // –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const phoneInput = document.getElementById('phone');
  if (phoneInput) {
    phoneInput.addEventListener('input', function(e) {
      let value = e.target.value.replace(/\D/g, '');
      if (value.length > 0) {
        value = '+7' + value.substring(1);
        if (value.length > 2) value = value.substring(0, 2) + ' (' + value.substring(2);
        if (value.length > 7) value = value.substring(0, 7) + ') ' + value.substring(7);
        if (value.length > 12) value = value.substring(0, 12) + '-' + value.substring(12);
        if (value.length > 15) value = value.substring(0, 15) + '-' + value.substring(15);
      }
      e.target.value = value;
    });
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  updateOrderTotal();
}

function updateOrderTotal() {
  const service = document.getElementById('service-select').value;
  let basePrice = 0;
  
  // –¶–µ–Ω—ã –Ω–∞ —É—Å–ª—É–≥–∏
  const prices = {
    'websites': 5000,
    'bots': 3000,
    'advertising': 5000,
    'design': 3000,
    'engraving': 1500,
    'support': 1000
  };
  
  basePrice = prices[service] || 0;
  document.getElementById('total-price').textContent = basePrice.toLocaleString() + ' ‚ÇΩ';
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
  updateProgress(basePrice);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –±–æ–Ω—É—Å
  const bonusActive = localStorage.getItem('simDigitalPassActive') === 'true';
  if(bonusActive && basePrice >= 3000) {
    const discountedPrice = Math.max(0, Math.round(basePrice * 0.7));
    const maxDiscount = 5000;
    const actualDiscount = Math.min(basePrice - discountedPrice, maxDiscount);
    
    document.getElementById('discount-info').innerHTML = `
      <strong>‚úì –ü—Ä–∏–º–µ–Ω–µ–Ω–∞ —Å–∫–∏–¥–∫–∞ 30%</strong> (–º–∞–∫—Å. —Å–∫–∏–¥–∫–∞ 5 000 ‚ÇΩ)<br>
      –≠–∫–æ–Ω–æ–º–∏—è: ${actualDiscount.toLocaleString()} ‚ÇΩ
    `;
    document.getElementById('final-price').textContent = 
      (basePrice - actualDiscount).toLocaleString() + ' ‚ÇΩ';
  } else {
    document.getElementById('discount-info').innerHTML = '';
    document.getElementById('final-price').textContent = 
      basePrice.toLocaleString() + ' ‚ÇΩ';
  }
}

function updateProgress(currentPrice) {
  const minOrder = 3000;
  const progress = Math.min(100, (currentPrice / minOrder) * 100);
  
  document.getElementById('progress-bar').style.width = progress + '%';
  document.getElementById('progress-text').textContent = 
    `–î–æ –±–æ–Ω—É—Å–∞: ${Math.max(0, minOrder - currentPrice).toLocaleString()} ‚ÇΩ`;
  
  const availability = document.querySelector('.bonus-availability');
  if(currentPrice >= minOrder) {
    availability.style.display = 'block';
  } else {
    availability.style.display = 'none';
  }
}

function validateBonus(e) {
  const totalPrice = parseInt(document.getElementById('total-price').textContent.replace(/\D/g, ''));
  const bonusActive = localStorage.getItem('simDigitalPassActive') === 'true';
  
  if(bonusActive && totalPrice < 3000) {
    e.preventDefault();
    alert('–°–∫–∏–¥–∫–∞ 30% –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 3 000 ‚ÇΩ.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏–ª–∏ —É–≤–µ–ª–∏—á—å—Ç–µ –æ–±—ä–µ–º –ø—Ä–æ–µ–∫—Ç–∞.');
    return false;
  }
  
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  // e.preventDefault();
  // sendFormData();
}

// 4. –°–µ–∫—Ä–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º
function initSecretMode() {
  const simbot = document.getElementById('simbot');
  if (!simbot) return;
  let clickCount = 0;
  let lastClickTime = 0;
  
  // –ù–∞–∂–∞—Ç–∏—è –Ω–∞ —Ä–æ–±–æ—Ç–∞
  simbot.addEventListener('click', () => {
    const now = Date.now();
    
    // –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 1 —Å–µ–∫—É–Ω–¥—ã
    if(now - lastClickTime > 1000) {
      clickCount = 0;
    }
    
    lastClickTime = now;
    clickCount++;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–≥–∞–Ω–∏–µ
    winkEye();
    
    // –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    if(clickCount >= 3) {
      activateSecretMode();
      clickCount = 0;
    }
  });
  
  // –ü–æ–¥–º–∏–≥–∏–≤–∞–Ω–∏–µ
  function winkEye() {
    const eye = document.querySelector('.simbot-eye-left');
    if(eye) {
      eye.style.transform = 'scaleY(0.2)';
      setTimeout(() => {
        eye.style.transform = 'scaleY(1)';
      }, 150);
    }
  }
}

function activateSecretMode() {
  const bonusContainer = document.getElementById('secret-bonus');
  if (!bonusContainer) return;
  bonusContainer.style.display = 'block';
  
  // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–∞
  const partners = [
    {
      name: 'studio 817',
      gift: '1 —á–∞—Å –∞—Ä–µ–Ω–¥—ã —Å—Ç—É–¥–∏–∏ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞',
      icon: 'üì∏'
    },
    {
      name: '–ê–π–¥–∞—é—Ä–∏—Å—Ç.—Ä—Ñ',
      gift: '–°–∫–∏–¥–∫–∞ 15% –Ω–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
      icon: '‚öñÔ∏è'
    }
  ];
  
  const partner = partners[Math.floor(Math.random() * partners.length)];
  const partnerElement = bonusContainer.querySelector('.partner-bonus');
  if (partnerElement) {
    partnerElement.querySelector('.partner-icon').textContent = partner.icon;
    partnerElement.querySelector('.partner-name').textContent = partner.name;
    partnerElement.querySelector('.partner-gift').textContent = partner.gift;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
  const activateBtn = bonusContainer.querySelector('.activate-bonus');
  if (activateBtn) {
    activateBtn.onclick = function() {
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –±–æ–Ω—É—Å
      localStorage.setItem('simDigitalPassActive', 'true');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      alert('–°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n\n–ü—Ä–∏ –∑–∞–∫–∞–∑–µ —É—Å–ª—É–≥–∏ –ø–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.\n\n–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
      updateOrderTotal();
      
      // –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É
      activateBtn.innerHTML = '‚úì –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω';
      activateBtn.disabled = true;
    };
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç—å
  const closeBtn = bonusContainer.querySelector('.close-secret-bonus');
  if (closeBtn) {
    closeBtn.addEventListener('click', function() {
      bonusContainer.style.display = 'none';
    });
  }
}

// 5. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ä–æ–±–æ—Ç
function initContactRobot() {
  const contactToggle = document.querySelector('.contact-toggle');
  const contactRobot = document.getElementById('contact-robot');
  if (!contactToggle || !contactRobot) return;
  
  contactToggle.addEventListener('click', function() {
    const simbot = document.getElementById('simbot');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞
    if (simbot) {
      simbot.style.transform = 'scale(0.8)';
      simbot.style.opacity = '0.7';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞
    contactRobot.style.display = 'block';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
      contactRobot.style.opacity = '1';
      contactRobot.style.transform = 'scale(1)';
    }, 50);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–æ–±–æ—Ç –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setTimeout(() => {
      if (simbot) {
        simbot.style.transform = 'scale(1)';
        simbot.style.opacity = '1';
      }
    }, 800);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    greetWithRobot();
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞
  document.querySelector('.close-contact-robot').addEventListener('click', function() {
    closeContactRobot();
  });
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∏–∫–æ–º –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
  document.addEventListener('click', function(e) {
    if (contactRobot.style.display === 'block' && 
        !contactRobot.contains(e.target) && 
        !contactToggle.contains(e.target)) {
      closeContactRobot();
    }
  });
}

function closeContactRobot() {
  const contactRobot = document.getElementById('contact-robot');
  const simbot = document.getElementById('simbot');
  
  contactRobot.style.opacity = '0';
  contactRobot.style.transform = 'scale(0.9)';
  
  setTimeout(() => {
    contactRobot.style.display = 'none';
    if (simbot) {
      simbot.style.transform = 'scale(1)';
      simbot.style.opacity = '1';
    }
  }, 300);
}

function greetWithRobot() {
  const robotArms = document.querySelectorAll('.contact-robot-arm-left, .contact-robot-arm-right');
  
  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä—É–∫–∞–º–∏
  robotArms.forEach(arm => {
    arm.style.transition = 'transform 0.5s ease';
    arm.style.transform = 'rotate(20deg)';
  });
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
  setTimeout(() => {
    robotArms.forEach(arm => {
      arm.style.transform = 'rotate(0deg)';
    });
  }, 500);
}

// 6. –°–∫—Ä—ã—Ç–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞
function initSecretHint() {
  const hint = document.querySelector('.secret-hint');
  if(hint) {
    // –†–µ–¥–∫–æ–µ –º–∏–≥–∞–Ω–∏–µ
    setInterval(() => {
      hint.style.color = '#F8F9FF';
      setTimeout(() => {
        hint.style.color = '#8C52FF';
      }, 300);
    }, 30000);
  }
}

// 7. –ü—Ä–∞–≤–∏–ª–∞ –±–æ–Ω—É—Å–∞
function initBonusRules() {
  const rulesSection = document.querySelector('.bonus-rules-section');
  const rulesLink = document.querySelector('a[href="#bonus-rules"]');
  
  if (rulesLink) {
    rulesLink.addEventListener('click', function(e) {
      e.preventDefault();
      rulesSection.classList.add('active');
      window.location.hash = 'bonus-rules';
    });
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
  const returnLinks = document.querySelectorAll('.footer-links a[href="#services"], .footer-links a[href="#order"]');
  returnLinks.forEach(link => {
    link.addEventListener('click', function() {
      if (rulesSection) {
        rulesSection.classList.remove('active');
        window.location.hash = '';
      }
    });
  });
}

// 8. –ê–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
function initScrollAnimations() {
  const animatedElements = document.querySelectorAll('.service-card, .process-step');
  function checkScroll() {
    animatedElements.forEach(element => {
      const elementPosition = element.getBoundingClientRect().top;
      const screenPosition = window.innerHeight / 1.3;
      if (elementPosition < screenPosition) {
        element.classList.add('visible');
      }
    });
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  window.addEventListener('load', checkScroll);
  window.addEventListener('scroll', checkScroll);
}